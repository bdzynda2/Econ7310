abline(a = 0, b = .01)
skewness(unemp.income$residuals)
kurtosis(unemp.income$residuals)
summary(ur.df(unemp.income$residuals, type = 'none', selectlags = 'BIC'))
income.elect <- lm(income.ts ~ (elect.ts-elect.decom$seasonal))
summary(income.elect)
plot(income.elect$residuals, type='l', ylab = 'Residuals')
qqnorm(income.elect$residuals)
abline(a = 0, b = .1)
skewness(income.elect$residuals)
kurtosis(income.elect$residuals)
summary(ur.df(income.elect$residuals, type = 'none', selectlags = 'BIC'))
elect.unemp <- lm((elect.ts-elect.decom$seasonal) ~ unemp.ts)
summary(elect.unemp)
plot(elect.unemp$residuals, type='l')
qqnorm(elect.unemp$residuals)
abline(a = 0, b = .1)
skewness(elect.unemp$residuals)
kurtosis(elect.unemp$residuals)
summary(ur.df(elect.unemp$residuals, type = 'none', selectlags = 'BIC'))
summary(ur.df(elect.ts-elect.decom$seasonal, type = 'trend', lags = 3))
year <- seq(2001:2017, 17)
year <- seq(2001:2017)
year
year <- seq(from=2001, to=2017)
year
rep(year, 12)
year <- sort(rep(year, 12), decreasing = FALSE)
year
year <- year[2:length(year-9)]
year
setwd("~/")
wine <- read.table('RedWineQualityData', header = TRUE, sep = ';')
wine <- read.table('RedWineQualityData.txt', header = TRUE, sep = ';')
head(wine)
mean(wine$alcohol)
summary(wine$alcohol)
hist(wine$quality,
main = "Wine Quality Distribution")
summary(wine$quality)
summary(as.factorr(wine$quality))
summary(as.factor(wine$quality))
wine_7 <- wine[which(wine$quality==7),]
wine_7
wine_5 <- wine[which(wine$quality==5),]
badWine <- wine[which(wine$quality<=5),]
goodWine <- wine wine[which(wine$quality>5),]
wine
head(wine)
badWine <- wine[which(wine$quality<=5),]
goodWine <- wine[which(wine$quality>5),]
wine$Outcome <- 0
wine$Outcome <- 0
for(i in 1:nrow(wine)){
if(wine$quality > 5){
wine$Outcome = 1
}
}
warni()
warnings(
)
names(wine)
wine$Outcome <- 0
for(i in 1:nrow(wine)){
if(wine[i, 'quality'] > 5){
wine[i, 'Outcome'] = 1
}
}
head(wine)
wine.lm <- lm(wine$Outcome ~ wine$alcohol + wine$volatile.acidity)
summary(wine.lm)
?lm
?glm
wine.glm <- glm(wine$Outcome ~ wine$alcohol + wine$volatile.acidity, family=binomial(link='logit'))
summary(wine.glm)
pairs(wine)
pairs(wine)
pairs(wine$alcohol, wine$Outcome)[col=c('blue', 'green')]
pairs(wine$alcohol, wine$Outcome)
?pairs
pairs(wine$alcohol~wine$Outcome)[col=c('blue', 'green')]
pairs(wine$alcohol, wine$volatile.acidity, wine$Outcome)
pairs(~wine$alcohol+wine$volatile.acidity+wine$Outcome)
pairs(~wine$alcohol+wine$volatile.acidity+wine$Outcome[col=c("red")])
pairs(~wine$alcohol+wine$volatile.acidity+wine$Outcome[col=c("red", 'black')])
pairs(~wine$alcohol+wine$volatile.acidity+wine$Outcome)
plot(wine.lm)
month <- rep(Month, 17)
month <- rep(month.name[1:12], 17)
month
year <- seq(from=2001, to=2017)
year <- sort(rep(year, 12), decreasing = FALSE)
month <- rep(month.name[1:12], 17)
year <- year[2:length(year)-9]
year <- year[2:(length(year)-9)]
year
year <- seq(from=2001, to=2017)
year <- sort(rep(year, 12), decreasing = FALSE)
month <- rep(month.name[1:12], 17)
year <- year[2:(length(year)-8)]
year
year <- seq(from=2001, to=2017)
year <- sort(rep(year, 12), decreasing = FALSE)
month <- rep(month.name[1:12], 17)
year <- year[1:(length(year)-8)]
month <- month[1:lenght(year)]
month <- month[1:length(year)]
head(elect)
head(Elect)
date <- cbind(month, year)
date <- data.frame(month, year)
date <- data.frame(month, year)
date[94,]
date
elect.bp <- breakpoints((elect.ts - elect.decom$seasonal) ~ 1)
elect.bp.confint <- confint(elect.bp)
plot.ts(elect.ts*1000 - elect.decom$seasonal,
main = 'Plot of Structural Breaks and Recession',
ylab = 'Million Kilowatt Hours')
lines(elect.bp, col = 'red')
lines(elect.bp.confint, col = 'green')
abline(v = rps_year_frac, col = 'orange')
recStart <- 2007 + 11/12
recEnd <- 2009 + 5/12
rect(xleft = recStart, xright = recEnd, ybottom=par("usr")[3], ytop=par("usr")[4], density=10, col = "blue")
elect.bp
summary(ur.df(elect.ts, type='trend', selectlags = 'BIC'))
summary(ur.df(elect.ts, type='drift', selectlags = 'BIC'))
summary(ur.df(elect.ts, type='none', selectlags = 'BIC'))
plot(elect.ts)
plot(elect.ts- elect.decom$seasonal)
summary(ur.df(elect.ts, type='trend', selectlags = 'BIC'))
income.za <- ur.za(income.ts, model = 'both', lag = 3)
summary(income.za)
plot(income.za)
date[88,]
income.bp <- breakpoints(income.ts ~ 1)
income.bp.confint <- confint(income.bp)
plot.ts(income.ts*100000000, main = 'Plot of Structural Breaks and Recession',
ylab = 'Thousands of Dollars',
xlab = 'Year')
lines(income.bp, col = 'red')
lines(income.bp.confint, col = 'green')
abline(v = rps_year_frac, col = 'orange')
recStart <- 2007 + 11/12
recEnd <- 2009 + 5/12
rect(xleft = recStart, xright = recEnd, ybottom=par("usr")[3], ytop=par("usr")[4], density=10, col = "blue")
income.bp
summary(unemp.za)
date[93,]
unemp.bp <- breakpoints(unemp.ts ~ 1)
unemp.bp.confint <- confint(unemp.bp)
plot.ts(unemp.ts, main = 'Plot of Structural Breaks and Recession',
ylab = 'unemp', xlab = 'Year')
lines(unemp.bp, col = 'red')
lines(unemp.bp.confint, col = 'green')
abline(v = rps_year_frac, col = 'orange')
recStart <- 2007 + 11/12
recEnd <- 2009 + 5/12
rect(xleft = recStart, xright = recEnd, ybottom=par("usr")[3], ytop=par("usr")[4], density=10, col = "blue")
unemp.bp
ur.df(diff(log(elect.ts)), type = 'none')
elect.unemp <- lm((elect.ts) ~ unemp.ts)
summary(ur.df(elect.unemp$residuals, type = 'none', selectlags = 'BIC'))
elect.df <- ur.df(elect.ts, type = 'trend', selectlags = 'BIC')
plot(elect.df)
summary(elect.df)
elect.df <- ur.df(elect.ts, type = 'drift', selectlags = 'BIC')
summary(elect.df)
elect.df <- ur.df(elect.ts, type = 'none', selectlags = 'BIC')
summary(elect.df)
elect.za <- ur.za(elect.ts, model = 'both', lag = 3)
plot(elect.za)
summary(elect.za)
elect.bp <- breakpoints((elect.ts) ~ 1)
elect.bp.confint <- confint(elect.bp)
plot.ts(elect.ts*1000 - elect.decom$seasonal,
main = 'Plot of Structural Breaks and Recession',
ylab = 'Million Kilowatt Hours')
lines(elect.bp, col = 'red')
lines(elect.bp.confint, col = 'green')
abline(v = rps_year_frac, col = 'orange')
recStart <- 2007 + 11/12
recEnd <- 2009 + 5/12
rect(xleft = recStart, xright = recEnd, ybottom=par("usr")[3], ytop=par("usr")[4], density=10, col = "blue")
elect.bp
plot(rps.coint$residuals, type='l', ylab = 'Residuals')
qqnorm(rps.coint$residuals)
abline(a = 0, b = .01)
skewness(rps.coint$residuals)
kurtosis(rps.coint$residuals)
rps.coint <- lm(unemp.ts ~ income.ts + elect.ts)
summary(rps.coint)
qqline(rps.coint$residuals)
qqnorm(rps.coint$residuals)
qqline(rps.coint$residuals)
plot(rps.coint$residuals, type='l', ylab = 'Residuals')
qqnorm(rps.coint$residuals)
qqline(rps.coint$residuals)
abline(a = 0, b = .01)
skewness(rps.coint$residuals)
kurtosis(rps.coint$residuals)
plot(rps.coint$residuals, type='l', ylab = 'Residuals')
qqnorm(rps.coint$residuals)
qqline(rps.coint$residuals)
#abline(a = 0, b = .01)
skewness(rps.coint$residuals)
kurtosis(rps.coint$residuals)
knitr::opts_chunk$set(echo = TRUE)
state.df <- read.csv('C:/Users/Student/Documents/DavidZynda/RPS-State-Level/data/Arizona_Formatted.csv', header = TRUE)
state.df <- read.csv('~Student/Documents/DavidZynda/RPS-State-Level/data/Arizona_Formatted.csv', header = TRUE)
state.df <- read.csv('~Student/Documents/DavidZynda/RPS-State-Level/data/Arizona_formatted.csv', header = TRUE)
state.df <- read.csv('~Student/Documents/DavidZynda/RPS-State-Level/data/Davids-Formatted-Data/Arizona_formatted.csv', header = TRUE)
#Load State Data
#filename <- paste("C:/Users/Student/Documents/DavidZynda/RPS-State-Level/data/Davids-Formatted-Data/",state,"_formatted.csv", sep="")
#state.df <- read.csv(filename, header = TRUE)
state.df <- read.csv('C:/Users/Student/Documents/DavidZynda/RPS-State-Level/data/Davids-Formatted-Data/Arizona_formatted.csv', header = TRUE)
attach(state.df)
elect.ts <- ts(Elect, start = 2001, frequency = 12)
income.ts <- ts(Income, start = 2001, frequency = 12)
unemp.ts <- ts(Unemp, start = 2001, frequency = 12)
#Load Exogenous data
#filename.exo <- paste("C:/Users/Student/Documents/DavidZynda/RPS-State-Level/data/BVAR-Datasets/",state_label,"_exog.csv", sep="")
#state.exo <- read.csv(filename.exo, header = FALSE)
state.exo <- read.csv('C:/Users/Student/Documents/DavidZynda/RPS-State-Level/data/AZ_exog.csv', header = FALSE)
#state.exo <- read.csv(filename.exo, header = FALSE)
state.exo <- read.csv('C:/Users/Student/Documents/DavidZynda/RPS-State-Level/data/BVAR-Datasets/AZ_exog.csv', header = FALSE)
setwd("~/DavidZynda/Econ7310/project2")
ohio <- read.csv("Ohio_formatted.csv")
names(ohio)
rownames(ohio) <- c("elect, income, unemp")
rownames(ohio) <- c("elect", "income", "unemp")
colnames(ohio) <- c("elect", "income", "unemp")
names(hio)
names(ohio)
attach(ohio)
nonfarm <- read.csv("Nonfarm_Ohio.csv")
manHours <- read.csv("AvgManHours_Ohio.csv")
head(manHours)
colnames(manHours)[,2] <- 'manHours'
colnames(manHours)[2] <- 'manHours'
attach(manHours)
manHours
manhours <- read.csv("AvgManHours_Ohio.csv")
colnames(manHours)[2] <- 'manHours'
attach(manHours)
manHours
manhours <- read.csv("AvgManHours_Ohio.csv")
colnames(manHours)[2] <- 'manHours'
colnames(manhours)[2] <- 'manHours'
attach(manHours)
attach(manhours)
manhours
manhours
manHours
head(nonfarm)
nonfarm <- read.csv("Nonfarm_Ohio.csv")
head(nonfarm)
manhours <- read.csv("AvgManHours_Ohio.csv", header = TRUE)
colnames(manhours)[2] <- 'manHours'
attach(manhours)
nonfarm <- read.csv("Nonfarm_Ohio.csv", header = TRUE)
ohio <- read.csv("Ohio_formatted.csv", header = TRUE)
colnames(ohio) <- c("elect", "income", "unemp")
head(nonfarm)
nonFarm <- read.csv("Nonfarm_Ohio.csv", header = TRUE)
manhours <- read.csv("AvgManHours_Ohio.csv", header = TRUE)
head(manhours)
manHours.ts <- ts(manHours, start = 2001, frequency = 12)
manHours.ts <- ts(manHours, start = 2001, frequency = 12)
nonfarm.ts <- ts(nonfarm, start = 2001, frequency = 12)
elect.ts <- ts(elect, start = 2001, frequency = 12)
income.ts <- ts(income, start = 2001, frequency = 12)
unemp.ts <- ts(unemp, start = 2001, frequency = 12)
manhours <- read.csv("AvgManHours_Ohio.csv", header = TRUE)
manHours <- manhours$SMU39000003000000007SA
nonFarm <- read.csv("Nonfarm_Ohio.csv", header = TRUE)
nonfarm <- nonFarm$OHNA
ohio <- read.csv("Ohio_formatted.csv", header = TRUE)
colnames(ohio) <- c("elect", "income", "unemp")
attach(ohio)
manHours.ts <- ts(manHours, start = 2001, frequency = 12)
nonfarm.ts <- ts(nonfarm, start = 2001, frequency = 12)
elect.ts <- ts(elect, start = 2001, frequency = 12)
income.ts <- ts(income, start = 2001, frequency = 12)
unemp.ts <- ts(unemp, start = 2001, frequency = 12)
library(urca)
summary(ur.df(manHours.ts, type = 'trend', lags = 3))
summary(ur.df(manHours.ts, type = 'drift', lags = 3))
summary(ur.df(manHours.ts, type = 'both', lags = 3))
summary(ur.df(manHours.ts, type = 'none', lags = 3))
#Avg Manufacturing Hours
summary(ur.df(manHours.ts, type = 'trend', lags = 3))
summary(ur.df(manHours.ts, type = 'drift', lags = 3))
summary(ur.df(manHours.ts, type = 'none', lags = 3))
#Nonfarm Employment
summary(ur.df(nonfarm.ts, type = 'trend', lags = 3))
summary(ur.df(nonfarm.ts, type = 'drift', lags = 3))
summary(ur.df(nonfarm.ts, type = 'none', lags = 3))
#Industrial Electricity Sales
summary(ur.df(elect.ts, type = 'trend', lags = 3))
summary(ur.df(elect.ts, type = 'drift', lags = 3))
summary(ur.df(elect.ts, type = 'none', lags = 3))
#Total Personal Income Minus Transfer Payments
summary(ur.df(income.ts, type = 'trend', lags = 3))
summary(ur.df(income.ts, type = 'drift', lags = 3))
summary(ur.df(income.ts, type = 'none', lags = 3))
#Unemployment Rate
summary(ur.df(unemp.ts, type = 'trend', lags = 3))
summary(ur.df(unemp.ts, type = 'drift', lags = 3))
#Unemployment Rate
summary(ur.df(unemp.ts, type = 'trend', lags = 3))
summary(ur.df(unemp.ts, type = 'drift', lags = 3))
summary(ur.df(unemp.ts, type = 'none', lags = 3))
manHours.ln <- diff(log(manHours.ts))
summary(ur.df(manHours.ln, type = 'trend', lags = 3))
nonfarm.ln <- diff(log(nonfarm.ts))
summary(ur.df(nonfarm.ln, type = 'trend', lags = 3))
elect.ln <- diff(log(elect.ts))
summary(ur.df(elect.ln, type = 'trend', lags = 3))
summary(ur.df(unemp.ln, type = 'trend', lags = 3))
.
unemp.ln <- diff(log(unemp.ts))
summary(ur.df(unemp.ln, type = 'trend', lags = 3))
plot.ts(cbind(manHours.ts, nonfarm.ts))
plot.ts(cbind(manHours.ts, nonfarm.ts, unemp.ts))
nonfarm.decom <- decompose(nonfarm.ts)
plot.ts(cbind(manHours.ts, nonfarm.ts - nonfarm.decom$seasonal, unemp.ts))
plot.ts(nonfarm.ts)
plot.ts(nonfarm.ts-nonfarm.decom$seasonal)
plot.ts(cbind(manHours.ts, nonfarm.ts, unemp.ts))
manHours.nonfarm <- lm(nonfarm.ts ~ manHours.ts)
summary(manHours.nonfarm)
plot(manHours.ts, nonfarm.ts)
abline(manHours.nonfarm)
qqnorm(manHours.nonfarm)
qqnorm(manHours.nonfarm$residuals)
qqline(manHours.nonfarm$residuals)
adf.test(manHours.nonfarm)
ur.df(manHours.nonfarm)
ur.df(manHours.nonfarm$residuals, type = 'none', lags = 1)
summary(ur.df(manHours.nonfarm$residuals, type = 'none', lags = 1))
y <- (0, 100)
y <- rep(0, 100)
e = rnorm(100, 0 ,1)
b1 <- .5
b0 = -3
for(i in 1:5){
y[i+1] = b0 + b1*y[i] + e[i]
}
plot(y)
y <- rep(0, 5)
b1 <- .5
b0 = -3
e = rnorm(5, 0 ,1)
for(i in 1:5){
y[i+1] = b0 + b1*y[i] + e[i]
}
y <- rep(0, 100)
b1 <- .5
b0 = -3
e = rnorm(100, 0 ,1)
for(i in 1:100){
y[i+1] = b0 + b1*y[i] + e[i]
}
plot(y)
plot(y, type = 'l')
install.packages("vars")
library(vars)
summary(ur.df(manHours.nonfarm$residuals, type = 'both', lags = 1))
summary(ur.df(manHours.nonfarm$residuals, type = 'trend', lags = 1))
summary(ur.df(manHours.nonfarm$residuals, type = 'drift', lags = 1))
summary(ur.df(manHours.nonfarm$residuals, type = 'both', lags = 1))
summary(ur.df(manHours.nonfarm$residuals, type = 'none', lags = 1))
y <- rep(0, 100)
b1 <- .5
b0 = 3
e = rnorm(100, 0 ,1)
for(i in 1:100){
y[i+1] = b0 + b1*y[i] + e[i]
}
plot(y, type = 'l')
ohio.df <- data.frame(manHours = manHours, nonfarm = nonfarm, electricity = elect)
nrow(manHours)
length(manHours)
lenght(elect)
length(elect)
library(vars)
library(urca)
manhours <- read.csv("AvgManHours_Ohio.csv", header = TRUE)
manHours <- manhours$SMU39000003000000007SA
nonFarm <- read.csv("Nonfarm_Ohio.csv", header = TRUE)
nonfarm <- nonFarm$OHNA
ohio <- read.csv("Ohio_formatted.csv", header = TRUE)
colnames(ohio) <- c("elect", "income", "unemp")
attach(ohio)
manHours.ts <- ts(manHours, start = 2001, frequency = 12)
nonfarm.ts <- ts(nonfarm, start = 2001, frequency = 12)
elect.ts <- ts(elect, start = 2001, frequency = 12)
income.ts <- ts(income, start = 2001, frequency = 12)
unemp.ts <- ts(unemp, start = 2001, frequency = 12)
## Augment Dickey-Fuller Test
#Avg Manufacturing Hours
summary(ur.df(manHours.ts, type = 'trend', lags = 3))
summary(ur.df(manHours.ts, type = 'drift', lags = 3))
summary(ur.df(manHours.ts, type = 'none', lags = 3))
manHours.ln <- diff(log(manHours.ts))
summary(ur.df(manHours.ln, type = 'trend', lags = 3))
summary(ur.df(manHours.ln, type = 'drift', lags = 3))
summary(ur.df(manHours.ln, type = 'none', lags = 3))
#Nonfarm Employment
summary(ur.df(nonfarm.ts, type = 'trend', lags = 3))
summary(ur.df(nonfarm.ts, type = 'drift', lags = 3))
summary(ur.df(nonfarm.ts, type = 'none', lags = 3))
nonfarm.ln <- diff(log(nonfarm.ts))
summary(ur.df(nonfarm.ln, type = 'trend', lags = 3))
#Industrial Electricity Sales
summary(ur.df(elect.ts, type = 'trend', lags = 3))
summary(ur.df(elect.ts, type = 'drift', lags = 3))
summary(ur.df(elect.ts, type = 'none', lags = 3))
elect.ln <- diff(log(elect.ts))
summary(ur.df(elect.ln, type = 'trend', lags = 3))
#Total Personal Income Minus Transfer Payments
summary(ur.df(income.ts, type = 'trend', lags = 3))
summary(ur.df(income.ts, type = 'drift', lags = 3))
summary(ur.df(income.ts, type = 'none', lags = 3))
income.ln <- diff(log(income.ts))
#Unemployment Rate
summary(ur.df(unemp.ts, type = 'trend', lags = 3))
summary(ur.df(unemp.ts, type = 'drift', lags = 3))
summary(ur.df(unemp.ts, type = 'none', lags = 3))
unemp.ln <- diff(log(unemp.ts))
summary(ur.df(unemp.ln, type = 'trend', lags = 3))
# Check for cointegration
plot.ts(cbind(manHours.ts, nonfarm.ts, unemp.ts))
manHours.nonfarm <- lm(nonfarm.ts ~ manHours.ts)
summary(manHours.nonfarm)
plot(manHours.ts, nonfarm.ts)
abline(manHours.nonfarm)
qqnorm(manHours.nonfarm$residuals)
qqline(manHours.nonfarm$residuals)
summary(ur.df(manHours.nonfarm$residuals, type = 'trend', lags = 1))
summary(ur.df(manHours.nonfarm$residuals, type = 'drift', lags = 1))
summary(ur.df(manHours.nonfarm$residuals, type = 'none', lags = 1))
#Sample replication
y <- rep(0, 100)
b1 <- .5
b0 = 3
e = rnorm(100, 0 ,1)
for(i in 1:100){
y[i+1] = b0 + b1*y[i] + e[i]
}
plot(y, type = 'l')
# fit var with avgmanhours, nonfarm, electricity
ohio.df <- data.frame(manHours = manHours, nonfarm = nonfarm, electricity = elect)
?VAR
ohio.var <- VAR(ohio.df, p = 2, type = 'both')
summary(ohio.var)
plot(ohio.df)
plot.ts(ohio.df)
manHours[1]
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i] + const + e[i]
}
y = nonfarm[1:2] + rep(0, 191)
manHours.l1 <- manHours[2] + rep(0, 191)
nonfarm.l1 <- nonfarm[2] + rep(0, 191)
manHours.l2 <- manHours[1] + rep(0, 192)
nonfarm.l2 <- nonfarm[1] + rep(0, 192)
e <- rnorm(193, 0, 1)
const = -129.77918
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i] + const + e[i]
}
plot(y)
plot(y, type='l')
plot.ts(cbind(y,nonfarm.ts))
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i]
}
plot.ts(cbind(y,nonfarm.ts))
set.seed(18495)
e <- rnorm(193, 0, 1)
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i]
}
plot.ts(cbind(y,nonfarm.ts))
plot.ts(y, ylim=c(5000, 6500))
plot.ts(y, ylim=c(5000, 6100))
lines(nonfarm, type = 'l', col = 'red')
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i] + const
}
plot.ts(y, ylim=c(5000, 6100))
lines(nonfarm, type = 'l', col = 'red')
plot.ts(y, ylim=c(2000, 6100))
lines(nonfarm, type = 'l', col = 'red')
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i] -50
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i] -50
}
plot.ts(y, ylim=c(2000, 6100))
lines(nonfarm, type = 'l', col = 'red')
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i] -25
for(i in 1:191){
y[i+2] = 1.19416 * y[i+1] + -0.23452 * y[i] + 5.69817 * manHours[i]  + e[i] -25
}
plot.ts(y, ylim=c(2000, 6100))
lines(nonfarm, type = 'l', col = 'red')
plot.ts(y, ylim=c(5000, 6100))
lines(nonfarm, type = 'l', col = 'red')
summary(ohio.var)
